# 1. Написать 12 функций по переводу:
# 1. Дюймы в сантиметры
# 2. Сантиметры в дюймы
# 3. Мили в километры
# 4. Километры в мили
# 5. Фунты в килограммы
# 6. Килограммы в фунты
# 7. Унции в граммы
# 8. Граммы в унции
# 9. Галлон в литры
# 10. Литры в галлоны
# 11. Пинты в литры
# 12. Литры в пинты
# Примечание: функция принимает на вход число и возвращает конвертированное число

def d_in_sm(a: int or float):  # функция, принимает аргумент типа int или float
    print("Дюймы в сантиметры")  # вывод на экран сообщения в "..."
    return (a / 0.39)  # возвращаем результат преобразования входного аргумента "а" типа int или float


def sm_in_d(a: int or float):  # функция, принимает аргумент типа int или float
    print("Сантиметры в дюймы")  # вывод на экран сообщения в "..."
    return (a * 0.39)  # возвращаем результат преобразования входного аргумента "а" типа int или float


def ml_in_km(a: int or float):  # функция, принимает аргумент типа int или float
    print("Мили в километры")  # вывод на экран сообщения в "..."
    return (a * 1.609)  # возвращаем результат преобразования входного аргумента "а" типа int или float


def km_in_ml(a: int or float):  # функция, принимает аргумент типа int или float
    print("Километры в мили")  # вывод на экран сообщения в "..."
    return (a / 1.609)  # возвращаем результат преобразования входного аргумента "а" типа int или float


def ft_in_kg(a: int or float):  # функция, принимает аргумент типа int или float
    print("Фунты в килограммы")  # вывод на экран сообщения в "..."
    return (a / 2.2046)  # возвращаем результат преобразования входного аргумента "а" типа int или float


def kg_in_ft(a: int or float):  # функция, принимает аргумент типа int или float
    print("Килограммы в фунты")  # вывод на экран сообщения в "..."
    return (a * 2.2046)  # возвращаем результат преобразования входного аргумента "а" типа int или float


def unc_in_gr(a: int or float):  # функция, принимает аргумент типа int или float
    print("Унции в граммы")  # вывод на экран сообщения в "..."
    return (a * 28.35)  # возвращаем результат преобразования входного аргумента "а" типа int или float


def gr_in_unc(a: int or float):  # функция, принимает аргумент типа int или float
    print("Граммы в унции")  # вывод на экран сообщения в "..."
    return (a / 28.35)  # возвращаем результат преобразования входного аргумента "а" типа int или float


def gl_in_litr(a: int or float):  # функция, принимает аргумент типа int или float
    print("Галлон в литры")  # вывод на экран сообщения в "..."
    return (a * 3.785)  # возвращаем результат преобразования входного аргумента "а" типа int или float


def litr_in_gl(a: int or float):  # функция, принимает аргумент типа int или float
    print("Литры в галлоны")  # вывод на экран сообщения в "..."
    return (a / 3.785)  # возвращаем результат преобразования входного аргумента "а" типа int или float


def pint_in_litr(a: int or float):  # функция, принимает аргумент типа int или float
    print("Пинты в литры")  # вывод на экран сообщения в "..."
    return (a * 2)  # возвращаем результат преобразования входного аргумента "а" типа int или float


def litr_in_pint(a: int or float):  # функция, принимает аргумент типа int или float
    print("Литры в пинты")  # вывод на экран сообщения в "..."
    return (a / 2)  # возвращаем результат преобразования входного аргумента "а" типа int или float


# 2. Написать программу, со следующим интерфейсом: пользователю предоставляется на
# выбор 12 вариантов перевода(описанных в первой задаче). Пользователь вводит цифру
# от одного до двенадцати. После программа запрашивает ввести численное значение.
# Затем программа выдает конвертированный результат. Использовать функции из первого
# задания. Программа должна быть в бесконечном цикле. Код выхода из программы - “0”.

print("Вас приветствует Конвертор чисел! \nВ вашем распоряжении 12 операций конвентирования:\n"
      "1. Дюймы в сантиметры\n2. Сантиметры в дюймы\n3. Мили в километры\n4. Километры в мили\n5. Фунты в килограммы\n"
      "6. Килограммы в фунты\n7. Унции в граммы\n8. Граммы в унции\n9. Галлон в литры\n10. Литры в галлоны\n"
      "11. Пинты в литры\n12. Литры в пинты")  # вывод на экран сообщения в "...", "\n" - переход на новую строку.
while True:  # бесконечный цикл
    dict_func_perevoda = {
        1: d_in_sm, 2: sm_in_d, 3: ml_in_km, 4: km_in_ml, 5: ft_in_kg,
        6: kg_in_ft, 7: unc_in_gr, 8: gr_in_unc, 9: gl_in_litr, 10: litr_in_gl,
        # словарь, содержит "номер функции(item):название функции(value)"
        11: pint_in_litr, 12: litr_in_pint
    }
    nomer_func = int(input("Введите номер операции(целое число от 1 до 12), для выхода из программы введите '0': "))
    # вводим с клавиатуры номер функции, т.к. input(возвращает строковое значение) обворачиваем его в int(преобр. в целое число)
    if nomer_func == 0:  # условный оператор, сравниваем введенное значение с "0", если оно true, то выополняем print and break
        print("Конец операции конвертирования!")  # вывод на экран сообщения в "..."
        break  # ключевое слово прекращения цикла
    else:  # иначе
        a = float(input("Введите число для конвертации: "))  # вводим с клавиатуры значение, которое хотим преобразовать
        print("Результат: ", dict_func_perevoda[nomer_func](a))  # выводим на экран результат вызова функции
